// SKIP AUTOGENERATION
// AUTOGENERATED FROM https://github.com/vuejs/eslint-plugin-vue/blob/8f094200664a2b10bc597016f5486066a174e098/tests/lib/rules/no-lone-template.js
/**
 * @author Yosuke Ota
 * See LICENSE file in root directory for full license.
 */
'use strict'

const RuleTester = require('eslint').RuleTester
const rule = require('../../../eslint-plugin-vue/lib/rules/no-lone-template')

const tester = new RuleTester({
  languageOptions: {
    parser: require('vue-eslint-parser'),
    ecmaVersion: 'latest',
    sourceType: 'module',
    parserOptions: {
      templateTokenizer: { pug: 'vue-eslint-parser-template-tokenizer-pug' }
    }
  }
})

tester.run('no-lone-template', rule, {
  valid: [
    {
      filename: 'test.vue',
      code: `<template lang="pug">
template(v-if="foo") ...
template(v-else-if="bar") ...
template(v-else) ...
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">template(v-for="e in list") ...</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">template(v-slot) ...</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
CoolButton
  template(slot="foo") ...
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
CoolButton
  template(slot-scope="foo") ...
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
CoolButton
  template(scope="foo") ...
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">template(id="a") ...</template>`,
      options: [{ ignoreAccessible: true }]
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">template(:id="a") ...</template>`,
      options: [{ ignoreAccessible: true }]
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">template(ref="b") ...</template>`,
      options: [{ ignoreAccessible: true }]
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">template(:ref="b") ...</template>`,
      options: [{ ignoreAccessible: true }]
    }
  ],
  invalid: [
    {
      filename: 'test.vue',
      code: `<template lang="pug">template ...</template>`,
      errors: [
        {
          message: '`<template>` require directive.',
          line: 1,
          column: 22,
          endLine: 1,
          endColumn: 30
        }
      ]
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">template</template>`,
      errors: ['`<template>` require directive.']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">template(v-on:id="a") ...</template>`,
      options: [{ ignoreAccessible: true }],
      errors: ['`<template>` require directive.']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">template(v-bind="id") ...</template>`,
      options: [{ ignoreAccessible: true }],
      errors: ['`<template>` require directive.']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">template(v-bind:[foo]="id") ...</template>`,
      options: [{ ignoreAccessible: true }],
      errors: ['`<template>` require directive.']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">template.b ...</template>`,
      options: [{ ignoreAccessible: true }],
      errors: ['`<template>` require directive.']
    }
  ]
})
