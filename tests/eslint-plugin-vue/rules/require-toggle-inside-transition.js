// AUTOGENERATED FROM https://github.com/vuejs/eslint-plugin-vue/blob/1ce68fa9def2c7d6da7aa5020c731860d7027459/tests/lib/rules/require-toggle-inside-transition.js
/**
 * @author Yosuke Ota
 * See LICENSE file in root directory for full license.
 */
'use strict'

// ------------------------------------------------------------------------------
// Requirements
// ------------------------------------------------------------------------------

const RuleTester = require('eslint').RuleTester
const rule = require('../../../eslint-plugin-vue/lib/rules/require-toggle-inside-transition')

// ------------------------------------------------------------------------------
// Tests
// ------------------------------------------------------------------------------

const tester = new RuleTester({
  languageOptions: {
    parser: require('vue-eslint-parser'),
    ecmaVersion: 2015,
    parserOptions: {
      templateTokenizer: { pug: 'vue-eslint-parser-template-tokenizer-pug' }
    }
  }
})

tester.run('require-toggle-inside-transition', rule, {
  valid: [
    {
      filename: 'test.vue',
      code: ''
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
transition
  div(v-if="show")
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
transition
  div(v-show="show")
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
Transition
  div(v-if="show")
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
Transition
  div(v-show="show")
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
Transition
  MyComp
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
Transition
  component(:is="component")
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
Transition
  div(:is="component")
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
svg(height="100", width="100")
  transition
    circle(v-if="show")
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
svg(height="100", width="100")
  transition
    MyComponent
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
transition
  template(v-if="show")
    div
</template>`
    }
  ],
  invalid: [
    {
      filename: 'test.vue',
      code: `<template lang="pug">transition: div</template>`,
      errors: [
        {
          line: 1,
          column: 34,
          messageId: 'expected',
          endLine: 1,
          endColumn: 37
        }
      ]
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
Transition
  div
</template>`,
      errors: [{ messageId: 'expected' }]
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
transition
  div
  div
</template>`,
      errors: [{ messageId: 'expected' }]
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
transition
  div(v-for="e in list")
</template>`,
      errors: [{ messageId: 'expected' }]
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
svg(height="100", width="100")
  transition
    circle
</template>`,
      errors: [{ messageId: 'expected' }]
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
transition
  template(v-for="e in list")
    div
</template>`,
      errors: [{ messageId: 'expected' }]
    }
  ]
})
